[{"C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\index.js":"1","C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\reportWebVitals.js":"2","C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\SceneComponent.jsx":"3","C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\FieldRenderer.js":"4","C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\Particle.js":"5"},{"size":983,"mtime":1607302443528,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1423,"mtime":1606800453289,"results":"9","hashOfConfig":"7"},{"size":17203,"mtime":1607304821324,"results":"10","hashOfConfig":"7"},{"size":424,"mtime":1607291868133,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"ec5ndw",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\index.js",["25"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport FieldRenderer from './FieldRenderer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FieldRenderer />\n    <div id=\"ui-static\" className=\"ui-static-container\">\n      <button id=\"add-button-id\" className=\"add-button\">New Particle</button>\n    </div>\n    <div id=\"ui-dynamic\" className=\"ui-dynamic-container\">\n      <label id=\"dynamic-label-id\" className=\"dynamic-label\" for=\"charge-id\">Charge: </label>\n      <a >charge value</a>\n      <br/>\n      <input type=\"range\" id=\"charge-id\" className=\"charge\" name=\"charge\" min=\"-2\" max=\"2\" step=\"0.1\"/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["26","27"],"C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\reportWebVitals.js",[],"C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\SceneComponent.jsx",["28","29"],"import { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\nexport default (props) => {\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene)\r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} />\r\n    );\r\n}","C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\FieldRenderer.js",["30","31","32","33"],"C:\\home\\Workspace\\College\\Semester 3\\PHYS421\\Project\\react test\\mag-app\\src\\Particle.js",[],{"ruleId":"34","severity":1,"message":"35","line":15,"column":7,"nodeType":"36","endLine":15,"endColumn":11},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":3,"column":1,"nodeType":"43","endLine":38,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":34,"column":8,"nodeType":"46","endLine":34,"endColumn":21,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":172,"column":7,"nodeType":"50","messageId":"51","endLine":172,"endColumn":27},{"ruleId":"48","severity":1,"message":"52","line":233,"column":5,"nodeType":"50","messageId":"51","endLine":233,"endColumn":32},{"ruleId":"48","severity":1,"message":"53","line":235,"column":11,"nodeType":"50","messageId":"51","endLine":235,"endColumn":24},{"ruleId":"48","severity":1,"message":"53","line":290,"column":11,"nodeType":"50","messageId":"51","endLine":290,"endColumn":24},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["56"],"no-unused-vars","'fieldLineArrowHeight' is assigned a value but never used.","Identifier","unusedVar","'calculateOnePointFieldLines' is assigned a value but never used.","'maxLineLength' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"59","text":"60"},[1336,1349],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]